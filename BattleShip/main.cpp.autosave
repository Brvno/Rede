#include "mainwindow.h"
#include <QApplication>
#include <bits/stdc++.h>
#include "communication.h"
#include "campo.h"

#define PORT 5000

int fdSocket, mainSocket;

struct mensagem{
//    Todas as mensagens tem o mesmo formato e são diferenciadas pelo seu código:
//    1 - Enviar jogada;
//    2 - Acertou;
//    3 - Água;
//    4 - Jogada não permitida (Tentou jogar fora do tabuleiro);
//    5 - Venceu;
//    6 - Desistência.
    int code;
    int x,y;
};

mensagem *rcvMsg(){
    char msg[100];
    receiveMessage(fdSocket,msg,sizeof(msg));
    return (mensagem*)msg;
}

int main(int argc, char *argv[])
{
  /*
    QApplication a(argc, argv);
    MainWindow w;
    w.show();

    return a.exec();
   */

    /// Iniciar conexao
    bool server;
    socklen_t sockLen;
    if(server){
        mainSocket = openConnection(PORT, 0);
        fdSocket = acceptConnection(mainSocket, sockLen);
    }
    else
        fdSocket = tryConnection("localhost", PORT, 0);

    ///Posicionar
    Campo mySide = new Campo(true);
    Campo enemySide = new Campo(false);
    
    mySide.posicionar();
    
    mensagem *cmd;
    ///Jogar
    /// Server comeca jogando
    if(!server){
        int x,y;
        std::cout << "Posicao do tiro: " << std::endl;
        std::cin >> x >> y;
        cmd->x = x;
        cmd->y = y;
        cmd->code = 1;
        sendMessage(fdSocket,(char*)cmd,sizeof(cmd));
        cmd = rcvMsg();
        
        
    }
    while(!mySide.isGameOver() && !enemySide.isGameOver()){
        ///Jogar
        int x,y;
        std::cout << "Posicao do tiro: " << std::endl;
        std::cin >> x >> y;
        cmd->x = x;
        cmd->y = y;
        cmd->code = 1;
        sendMessage(fdSocket,(char*)cmd,sizeof(cmd));
        cmd = rcvMsg();       
    }

    closeConnectio(mainSocket);
    closeConnection(fdSocket);
    return 0;
}
